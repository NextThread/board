{"ast":null,"code":"var _jsxFileName = \"D:\\\\react projects\\\\white-board\\\\frontend\\\\src\\\\Components\\\\Canvas\\\\Canvas.jsx\",\n  _s = $RefreshSig$();\nimport './Canvas.css';\nimport { useState, useEffect, useLayoutEffect } from 'react';\nimport rough from \"roughjs/bundled/rough.esm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roughGenerator = rough.generator();\nfunction Canvas(_ref) {\n  _s();\n  let {\n    canvasRef,\n    ctxRef,\n    elements,\n    setElements,\n    tool,\n    color\n  } = _ref;\n  const [draw, setDraw] = useState(false);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.height = window.innerHeight * 2;\n    canvas.width = window.innerWidth * 2;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 2;\n    ctx.lineCap = \"round\";\n    ctxRef.current = ctx;\n  }, []);\n  useEffect(() => {\n    ctxRef.current.strokeStyle = color;\n  }, [color]);\n  useLayoutEffect(() => {\n    const roughGen = rough.canvas(canvasRef.current);\n    if (elements.length > 0) {\n      ctxRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    }\n    elements.forEach(element => {\n      if (element.type === \"rect\") roughGen.draw(roughGenerator.rectangle(element.offsetX, element.offsetY, element.width, element.height, {\n        stroke: element.stroke,\n        strokeWidth: 5,\n        roughness: 0.5\n      }));else if (element.type === \"pencil\") roughGen.linearPath(element.path);else if (element.type === \"line\") roughGen.draw(roughGenerator.line(element.offsetX, element.offsetY, element.width, element.height));\n    });\n  }, [elements]);\n  const handleMouseDown = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    console.log(offsetX, offsetY);\n    if (tool === \"rect\") {\n      setElements(prev => [...prev, {\n        type: \"rect\",\n        offsetX,\n        offsetY,\n        width: 0,\n        height: 0,\n        stroke: color\n      }]);\n    } else if (tool === \"pencil\") {\n      setElements(prev => [...prev, {\n        type: \"pencil\",\n        offsetX,\n        offsetY,\n        path: [[offsetX, offsetY]],\n        stroke: color\n      }]);\n    } else if (tool === \"line\") {\n      setElements(prev => [...prev, {\n        type: \"Line\",\n        offsetX,\n        offsetY,\n        width: offsetX,\n        height: offsetY,\n        stroke: color\n      }]);\n    }\n    setDraw(true);\n  };\n  const handleMouseMove = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    if (draw) {\n      if (tool === \"pencil\") {\n        const {\n          path\n        } = elements[elements.length - 1];\n        const newPath = [...path, [offsetX, offsetY]];\n        setElements(prev => prev.map((ele, index) => {\n          if (index === elements.length - 1) {\n            return {\n              ...ele,\n              path: newPath\n            };\n          } else {\n            return ele;\n          }\n        }));\n      } else if (tool === \"line\") {\n        setElements(prev => prev.map((ele, index) => {\n          if (index === elements.length - 1) {\n            return {\n              ...ele,\n              width: offsetX,\n              height: offsetY\n            };\n          } else {\n            return ele;\n          }\n        }));\n      } else if (tool == \"rect\") {\n        setElements(prevElements => prevElements.map((ele, index) => {\n          if (index == elements.length - 1) {\n            return {\n              ...ele,\n              width: offsetX - ele.offsetX,\n              height: offsetY - ele.offsetY\n            };\n          } else {\n            return ele;\n          }\n        }));\n      }\n    }\n  };\n  const handleMouseUp = e => {\n    setDraw(false);\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    console.log(offsetX, offsetY);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    className: \"border border-dark border-3 h-100 w-100 overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this);\n}\n_s(Canvas, \"RYkPDRo/GYrgYFpSIEGxJkHtDcs=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["useState","useEffect","useLayoutEffect","rough","jsxDEV","_jsxDEV","roughGenerator","generator","Canvas","_ref","_s","canvasRef","ctxRef","elements","setElements","tool","color","draw","setDraw","canvas","current","height","window","innerHeight","width","innerWidth","ctx","getContext","strokeStyle","lineWidth","lineCap","roughGen","length","clearRect","forEach","element","type","rectangle","offsetX","offsetY","stroke","strokeWidth","roughness","linearPath","path","line","handleMouseDown","e","nativeEvent","console","log","prev","handleMouseMove","newPath","map","ele","index","prevElements","handleMouseUp","onMouseDown","onMouseMove","onMouseUp","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react projects/white-board/frontend/src/Components/Canvas/Canvas.jsx"],"sourcesContent":["import './Canvas.css';\r\nimport { useState,useEffect , useLayoutEffect} from 'react';\r\n\r\nimport rough from \"roughjs/bundled/rough.esm.js\";\r\n\r\n\r\nconst roughGenerator = rough.generator();\r\n\r\n\r\nfunction Canvas({canvasRef, ctxRef, elements, setElements,tool, color}) {\r\n\r\n    const [draw, setDraw] = useState(false);\r\n    \r\n    useEffect(() => {\r\n\r\n        const canvas = canvasRef.current;\r\n        canvas.height =window.innerHeight*2;\r\n        canvas.width = window.innerWidth*2;\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        ctx.strokeStyle = color;\r\n        ctx.lineWidth=2;\r\n        ctx.lineCap=\"round\";\r\n\r\n        ctxRef.current = ctx;\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        ctxRef.current.strokeStyle = color;\r\n    },[color]);\r\n\r\n    useLayoutEffect(()=> {\r\n        const roughGen = rough.canvas(canvasRef.current);\r\n\r\n        if(elements.length > 0){\r\n            ctxRef.current.clearRect(\r\n               0,\r\n               0,\r\n              canvasRef.current.width,\r\n              canvasRef.current.height\r\n              );\r\n          }\r\n      \r\n        \r\n        elements.forEach(element => {\r\n            if(element.type===\"rect\")\r\n            roughGen.draw(roughGenerator.rectangle(\r\n                element.offsetX,\r\n                element.offsetY,\r\n                element.width,\r\n                element.height,\r\n                {\r\n                    stroke: element.stroke,\r\n                    strokeWidth: 5,\r\n                    roughness:0.5,\r\n                }\r\n                ));\r\n\r\n            else if(element.type===\"pencil\")\r\n            roughGen.linearPath(element.path);\r\n\r\n            else if(element.type===\"line\")\r\n            roughGen.draw(roughGenerator.line(element.offsetX,element.offsetY,element.width,element.height));\r\n\r\n            \r\n        });\r\n    },[elements]);\r\n\r\n\r\n    const handleMouseDown = (e) => {\r\n        const {offsetX, offsetY} = e.nativeEvent;\r\n         console.log(offsetX,offsetY);\r\n\r\n         if(tool===\"rect\"){\r\n            setElements((prev) => [\r\n                ...prev,\r\n                {\r\n                 type: \"rect\",\r\n                 offsetX,\r\n                 offsetY,\r\n                 width: 0,\r\n                 height: 0,\r\n                 stroke:color,\r\n                },\r\n             ]);\r\n\r\n         }\r\n         else if(tool===\"pencil\"){\r\n            setElements((prev)=>[\r\n                ...prev,\r\n                {\r\n                    type:\"pencil\",\r\n                    offsetX,\r\n                    offsetY,\r\n                    path:[[offsetX,offsetY]],\r\n                    stroke:color,\r\n                },\r\n             ])\r\n         }\r\n         else if(tool===\"line\"){\r\n\r\n            setElements((prev) => [\r\n                ...prev,\r\n                {\r\n                    type:\"Line\",\r\n                    offsetX,\r\n                    offsetY,\r\n                    width: offsetX,\r\n                    height: offsetY,\r\n                    stroke:color,\r\n                }\r\n            ])\r\n         }\r\n\r\n     \r\n         \r\n         setDraw(true);\r\n\r\n        \r\n    }\r\n\r\n    const handleMouseMove = (e) => {\r\n        const {offsetX, offsetY} = e.nativeEvent;\r\n        if(draw){\r\n            if(tool===\"pencil\"){\r\n                const {path} = elements[elements.length - 1];\r\n                const newPath = [...path,[offsetX,offsetY]];\r\n    \r\n                setElements((prev) => \r\n                    prev.map((ele,index) => {\r\n                        if(index === elements.length-1){\r\n                            return {\r\n                               ...ele,\r\n                               path: newPath,\r\n                            };\r\n                        }\r\n                        else{\r\n                            return ele;\r\n                        }\r\n                    } ))\r\n\r\n            }\r\n            else if(tool===\"line\"){\r\n\r\n                setElements((prev) => \r\n                prev.map((ele,index) => {\r\n                    if(index === elements.length-1){\r\n                        return {\r\n                           ...ele,\r\n                           width: offsetX,\r\n                           height: offsetY,\r\n                        };\r\n                    }\r\n                    else{\r\n                        return ele;\r\n                    }\r\n                } ))\r\n\r\n            }\r\n           \r\n\r\n        else if(tool ==\"rect\"){\r\n            setElements((prevElements) =>\r\n              prevElements.map((ele, index) => {\r\n               if(index == elements.length - 1){\r\n                   return {\r\n                       ...ele,\r\n                       width:  offsetX - ele.offsetX,\r\n                       height: offsetY - ele.offsetY,\r\n                   };\r\n               }\r\n               else{\r\n                   return ele;\r\n               }\r\n              })\r\n            )\r\n        \r\n            }  \r\n    }\r\n    }\r\n    \r\n    const handleMouseUp = (e) => {\r\n        setDraw(false);\r\n        const {offsetX, offsetY} = e.nativeEvent;\r\n        console.log(offsetX,offsetY);\r\n        \r\n    }\r\n\r\n    return ( \r\n        <div\r\n             onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        className=\"border border-dark border-3 h-100 w-100 overflow-hidden\"> \r\n        \r\n      \r\n      <canvas \r\n      ref={canvasRef}\r\n        />\r\n    \r\n     </div>\r\n      );\r\n\r\n}\r\n\r\nexport default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}