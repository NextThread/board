{"ast":null,"code":"var _jsxFileName = \"D:\\\\react projects\\\\white-board\\\\frontend\\\\src\\\\Components\\\\Canvas\\\\Canvas.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useLayoutEffect } from \"react\";\nimport rough from \"roughjs/bundled/rough.esm.js\";\nimport CanvasViewer from \"../CanvasViewer/CanvasViewer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roughGenerator = rough.generator();\nconst Canvas = _ref => {\n  _s();\n  let {\n    canvasRef,\n    ctxRef,\n    elements,\n    setElements,\n    tool,\n    color,\n    user,\n    socket\n  } = _ref;\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [img, setImg] = useState(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      canvas.height = window.innerHeight * 2;\n      canvas.width = window.innerWidth * 2;\n      const ctx = canvas.getContext(\"2d\");\n      if (ctx) {\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 2;\n        ctx.lineCap = \"round\";\n        ctxRef.current = ctx;\n      }\n    }\n  }, [canvasRef, color]);\n  useEffect(() => {\n    if (ctxRef.current) {\n      ctxRef.current.strokeStyle = color;\n    }\n  }, [color]);\n  useLayoutEffect(() => {\n    if (canvasRef.current) {\n      const roughCanvas = rough.canvas(canvasRef.current);\n      if (elements.length > 0) {\n        if (ctxRef.current) {\n          ctxRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        }\n      }\n      elements.forEach(element => {\n        if (element.type === \"rect\") {\n          roughCanvas.draw(roughGenerator.rectangle(element.offsetX, element.offsetY, element.width, element.height, {\n            stroke: element.stroke,\n            strokeWidth: 5,\n            roughness: 0\n          }));\n        } else if (element.type === \"line\") {\n          roughCanvas.draw(roughGenerator.line(element.offsetX, element.offsetY, element.width, element.height, {\n            stroke: element.stroke,\n            strokeWidth: 5,\n            roughness: 0\n          }));\n        } else if (element.type === \"pencil\") {\n          roughCanvas.linearPath(element.path, {\n            stroke: element.stroke,\n            strokeWidth: 5,\n            roughness: 0\n          });\n        }\n      });\n      const canvasImage = canvasRef.current.toDataURL();\n      socket.emit(\"whiteboardData\", canvasImage);\n    }\n  }, [elements]);\n  const handleMouseDown = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    if (tool === \"pencil\") {\n      setElements(prevElements => [...prevElements, {\n        type: \"pencil\",\n        offsetX,\n        offsetY,\n        path: [[offsetX, offsetY]],\n        stroke: color\n      }]);\n    } else if (tool === \"line\") {\n      setElements(prevElements => [...prevElements, {\n        type: \"line\",\n        offsetX,\n        offsetY,\n        width: offsetX,\n        height: offsetY,\n        stroke: color\n      }]);\n    } else if (tool === \"rect\") {\n      setElements(prevElements => [...prevElements, {\n        type: \"rect\",\n        offsetX,\n        offsetY,\n        width: 0,\n        height: 0,\n        stroke: color\n      }]);\n    }\n    setIsDrawing(true);\n  };\n  const handleMouseMove = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    if (isDrawing) {\n      if (tool === \"pencil\") {\n        const {\n          path\n        } = elements[elements.length - 1];\n        const newPath = [...path, [offsetX, offsetY]];\n        setElements(prevElements => prevElements.map((ele, index) => {\n          if (index === elements.length - 1) {\n            return {\n              ...ele,\n              path: newPath\n            };\n          } else {\n            return ele;\n          }\n        }));\n      } else if (tool === \"line\") {\n        setElements(prevElements => prevElements.map((ele, index) => {\n          if (index === elements.length - 1) {\n            return {\n              ...ele,\n              width: offsetX,\n              height: offsetY\n            };\n          } else {\n            return ele;\n          }\n        }));\n      } else if (tool === \"rect\") {\n        setElements(prevElements => prevElements.map((ele, index) => {\n          if (index === elements.length - 1) {\n            return {\n              ...ele,\n              width: offsetX - ele.offsetX,\n              height: offsetY - ele.offsetY\n            };\n          } else {\n            return ele;\n          }\n        }));\n      }\n    }\n  };\n  const handleMouseUp = e => {\n    setIsDrawing(false);\n  };\n  if (!(user !== null && user !== void 0 && user.presenter)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-dark border-3 h-100 w-100 overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"\",\n        alt: \"Real time white board\",\n        className: \"w-100 h-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    className: \"border border-dark border-3 h-100 w-100 overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"MBkRmDuTKbqa2pf8YiC+RgSSx0w=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["useEffect","useState","useLayoutEffect","rough","CanvasViewer","jsxDEV","_jsxDEV","roughGenerator","generator","Canvas","_ref","_s","canvasRef","ctxRef","elements","setElements","tool","color","user","socket","isDrawing","setIsDrawing","img","setImg","canvas","current","height","window","innerHeight","width","innerWidth","ctx","getContext","strokeStyle","lineWidth","lineCap","roughCanvas","length","clearRect","forEach","element","type","draw","rectangle","offsetX","offsetY","stroke","strokeWidth","roughness","line","linearPath","path","canvasImage","toDataURL","emit","handleMouseDown","e","nativeEvent","prevElements","handleMouseMove","newPath","map","ele","index","handleMouseUp","presenter","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","onMouseMove","onMouseUp","ref","_c","$RefreshReg$"],"sources":["D:/react projects/white-board/frontend/src/Components/Canvas/Canvas.jsx"],"sourcesContent":["import { useEffect, useState, useLayoutEffect } from \"react\";\r\nimport rough from \"roughjs/bundled/rough.esm.js\";\r\nimport CanvasViewer from \"../CanvasViewer/CanvasViewer\";\r\n\r\nconst roughGenerator = rough.generator();\r\n\r\nconst Canvas = ({\r\n  canvasRef,\r\n  ctxRef,\r\n  elements,\r\n  setElements,\r\n  tool,\r\n  color,\r\n  user,\r\n  socket,\r\n}) => {\r\n  \r\n\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [img, setImg] = useState(null);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if(canvas){\r\n      canvas.height = window.innerHeight * 2;\r\n    canvas.width = window.innerWidth * 2;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    if(ctx){\r\n      ctx.strokeStyle = color;\r\n      ctx.lineWidth = 2;\r\n      ctx.lineCap = \"round\";\r\n      ctxRef.current = ctx;\r\n    }\r\n   \r\n    }\r\n\r\n    \r\n  }, [canvasRef,color]);\r\n\r\n  useEffect(() => {\r\n    if(ctxRef.current){\r\n      ctxRef.current.strokeStyle = color;\r\n    }\r\n    \r\n  }, [color]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (canvasRef.current) {\r\n      const roughCanvas = rough.canvas(canvasRef.current);\r\n\r\n      if (elements.length > 0) {\r\n        if(ctxRef.current){\r\n          ctxRef.current.clearRect(\r\n            0,\r\n            0,\r\n            canvasRef.current.width,\r\n            canvasRef.current.height\r\n          );\r\n        }\r\n       \r\n      }\r\n\r\n      elements.forEach((element) => {\r\n        if (element.type === \"rect\") {\r\n          roughCanvas.draw(\r\n            roughGenerator.rectangle(\r\n              element.offsetX,\r\n              element.offsetY,\r\n              element.width,\r\n              element.height,\r\n              {\r\n                stroke: element.stroke,\r\n                strokeWidth: 5,\r\n                roughness: 0,\r\n              }\r\n            )\r\n          );\r\n        } else if (element.type === \"line\") {\r\n          roughCanvas.draw(\r\n            roughGenerator.line(\r\n              element.offsetX,\r\n              element.offsetY,\r\n              element.width,\r\n              element.height,\r\n              {\r\n                stroke: element.stroke,\r\n                strokeWidth: 5,\r\n                roughness: 0,\r\n              }\r\n            )\r\n          );\r\n        } else if (element.type === \"pencil\") {\r\n          roughCanvas.linearPath(element.path, {\r\n            stroke: element.stroke,\r\n            strokeWidth: 5,\r\n            roughness: 0,\r\n          });\r\n        }\r\n      });\r\n\r\n      const canvasImage = canvasRef.current.toDataURL();\r\n      socket.emit(\"whiteboardData\", canvasImage);\r\n    }\r\n  }, [elements]);\r\n\r\n  const handleMouseDown = (e) => {\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n\r\n    if (tool === \"pencil\") {\r\n      setElements((prevElements) => [\r\n        ...prevElements,\r\n        {\r\n          type: \"pencil\",\r\n          offsetX,\r\n          offsetY,\r\n          path: [[offsetX, offsetY]],\r\n          stroke: color,\r\n        },\r\n      ]);\r\n    } else if (tool === \"line\") {\r\n      setElements((prevElements) => [\r\n        ...prevElements,\r\n        {\r\n          type: \"line\",\r\n          offsetX,\r\n          offsetY,\r\n          width: offsetX,\r\n          height: offsetY,\r\n          stroke: color,\r\n        },\r\n      ]);\r\n    } else if (tool === \"rect\") {\r\n      setElements((prevElements) => [\r\n        ...prevElements,\r\n        {\r\n          type: \"rect\",\r\n          offsetX,\r\n          offsetY,\r\n          width: 0,\r\n          height: 0,\r\n          stroke: color,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n\r\n    if (isDrawing) {\r\n      if (tool === \"pencil\") {\r\n        const { path } = elements[elements.length - 1];\r\n        const newPath = [...path, [offsetX, offsetY]];\r\n        setElements((prevElements) =>\r\n          prevElements.map((ele, index) => {\r\n            if (index === elements.length - 1) {\r\n              return {\r\n                ...ele,\r\n                path: newPath,\r\n              };\r\n            } else {\r\n              return ele;\r\n            }\r\n          })\r\n        );\r\n      } else if (tool === \"line\") {\r\n        setElements((prevElements) =>\r\n          prevElements.map((ele, index) => {\r\n            if (index === elements.length - 1) {\r\n              return {\r\n                ...ele,\r\n                width: offsetX,\r\n                height: offsetY,\r\n              };\r\n            } else {\r\n              return ele;\r\n            }\r\n          })\r\n        );\r\n      } else if (tool === \"rect\") {\r\n        setElements((prevElements) =>\r\n          prevElements.map((ele, index) => {\r\n            if (index === elements.length - 1) {\r\n              return {\r\n                ...ele,\r\n                width: offsetX - ele.offsetX,\r\n                height: offsetY - ele.offsetY,\r\n              };\r\n            } else {\r\n              return ele;\r\n            }\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = (e) => {\r\n    setIsDrawing(false);\r\n  };\r\n\r\nif(!user?.presenter){\r\n  return (\r\n    <div  className=\"border border-dark border-3 h-100 w-100 overflow-hidden\">\r\n      <img src=\"\" alt=\"Real time white board\" className=\"w-100 h-100\"/>\r\n\r\n    </div>\r\n  )\r\n}\r\n  return (\r\n    <div\r\n      onMouseDown={handleMouseDown}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseUp={handleMouseUp}\r\n      className=\"border border-dark border-3 h-100 w-100 overflow-hidden\"\r\n    >\r\n    <canvas ref={canvasRef} />\r\n   \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canvas;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,eAAe,QAAQ,OAAO;AAC5D,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,cAAc,GAAGJ,KAAK,CAACK,SAAS,CAAC,CAAC;AAExC,MAAMC,MAAM,GAAGC,IAAA,IAST;EAAAC,EAAA;EAAA,IATU;IACdC,SAAS;IACTC,MAAM;IACNC,QAAQ;IACRC,WAAW;IACXC,IAAI;IACJC,KAAK;IACLC,IAAI;IACJC;EACF,CAAC,GAAAT,IAAA;EAGC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACqB,GAAG,EAAEC,MAAM,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAIpCD,SAAS,CAAC,MAAM;IACd,MAAMwB,MAAM,GAAGZ,SAAS,CAACa,OAAO;IAChC,IAAGD,MAAM,EAAC;MACRA,MAAM,CAACE,MAAM,GAAGC,MAAM,CAACC,WAAW,GAAG,CAAC;MACxCJ,MAAM,CAACK,KAAK,GAAGF,MAAM,CAACG,UAAU,GAAG,CAAC;MACpC,MAAMC,GAAG,GAAGP,MAAM,CAACQ,UAAU,CAAC,IAAI,CAAC;MAEnC,IAAGD,GAAG,EAAC;QACLA,GAAG,CAACE,WAAW,GAAGhB,KAAK;QACvBc,GAAG,CAACG,SAAS,GAAG,CAAC;QACjBH,GAAG,CAACI,OAAO,GAAG,OAAO;QACrBtB,MAAM,CAACY,OAAO,GAAGM,GAAG;MACtB;IAEA;EAGF,CAAC,EAAE,CAACnB,SAAS,EAACK,KAAK,CAAC,CAAC;EAErBjB,SAAS,CAAC,MAAM;IACd,IAAGa,MAAM,CAACY,OAAO,EAAC;MAChBZ,MAAM,CAACY,OAAO,CAACQ,WAAW,GAAGhB,KAAK;IACpC;EAEF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEXf,eAAe,CAAC,MAAM;IACpB,IAAIU,SAAS,CAACa,OAAO,EAAE;MACrB,MAAMW,WAAW,GAAGjC,KAAK,CAACqB,MAAM,CAACZ,SAAS,CAACa,OAAO,CAAC;MAEnD,IAAIX,QAAQ,CAACuB,MAAM,GAAG,CAAC,EAAE;QACvB,IAAGxB,MAAM,CAACY,OAAO,EAAC;UAChBZ,MAAM,CAACY,OAAO,CAACa,SAAS,CACtB,CAAC,EACD,CAAC,EACD1B,SAAS,CAACa,OAAO,CAACI,KAAK,EACvBjB,SAAS,CAACa,OAAO,CAACC,MACpB,CAAC;QACH;MAEF;MAEAZ,QAAQ,CAACyB,OAAO,CAAEC,OAAO,IAAK;QAC5B,IAAIA,OAAO,CAACC,IAAI,KAAK,MAAM,EAAE;UAC3BL,WAAW,CAACM,IAAI,CACdnC,cAAc,CAACoC,SAAS,CACtBH,OAAO,CAACI,OAAO,EACfJ,OAAO,CAACK,OAAO,EACfL,OAAO,CAACX,KAAK,EACbW,OAAO,CAACd,MAAM,EACd;YACEoB,MAAM,EAAEN,OAAO,CAACM,MAAM;YACtBC,WAAW,EAAE,CAAC;YACdC,SAAS,EAAE;UACb,CACF,CACF,CAAC;QACH,CAAC,MAAM,IAAIR,OAAO,CAACC,IAAI,KAAK,MAAM,EAAE;UAClCL,WAAW,CAACM,IAAI,CACdnC,cAAc,CAAC0C,IAAI,CACjBT,OAAO,CAACI,OAAO,EACfJ,OAAO,CAACK,OAAO,EACfL,OAAO,CAACX,KAAK,EACbW,OAAO,CAACd,MAAM,EACd;YACEoB,MAAM,EAAEN,OAAO,CAACM,MAAM;YACtBC,WAAW,EAAE,CAAC;YACdC,SAAS,EAAE;UACb,CACF,CACF,CAAC;QACH,CAAC,MAAM,IAAIR,OAAO,CAACC,IAAI,KAAK,QAAQ,EAAE;UACpCL,WAAW,CAACc,UAAU,CAACV,OAAO,CAACW,IAAI,EAAE;YACnCL,MAAM,EAAEN,OAAO,CAACM,MAAM;YACtBC,WAAW,EAAE,CAAC;YACdC,SAAS,EAAE;UACb,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MAEF,MAAMI,WAAW,GAAGxC,SAAS,CAACa,OAAO,CAAC4B,SAAS,CAAC,CAAC;MACjDlC,MAAM,CAACmC,IAAI,CAAC,gBAAgB,EAAEF,WAAW,CAAC;IAC5C;EACF,CAAC,EAAE,CAACtC,QAAQ,CAAC,CAAC;EAEd,MAAMyC,eAAe,GAAIC,CAAC,IAAK;IAC7B,MAAM;MAAEZ,OAAO;MAAEC;IAAQ,CAAC,GAAGW,CAAC,CAACC,WAAW;IAE1C,IAAIzC,IAAI,KAAK,QAAQ,EAAE;MACrBD,WAAW,CAAE2C,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;QACEjB,IAAI,EAAE,QAAQ;QACdG,OAAO;QACPC,OAAO;QACPM,IAAI,EAAE,CAAC,CAACP,OAAO,EAAEC,OAAO,CAAC,CAAC;QAC1BC,MAAM,EAAE7B;MACV,CAAC,CACF,CAAC;IACJ,CAAC,MAAM,IAAID,IAAI,KAAK,MAAM,EAAE;MAC1BD,WAAW,CAAE2C,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;QACEjB,IAAI,EAAE,MAAM;QACZG,OAAO;QACPC,OAAO;QACPhB,KAAK,EAAEe,OAAO;QACdlB,MAAM,EAAEmB,OAAO;QACfC,MAAM,EAAE7B;MACV,CAAC,CACF,CAAC;IACJ,CAAC,MAAM,IAAID,IAAI,KAAK,MAAM,EAAE;MAC1BD,WAAW,CAAE2C,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;QACEjB,IAAI,EAAE,MAAM;QACZG,OAAO;QACPC,OAAO;QACPhB,KAAK,EAAE,CAAC;QACRH,MAAM,EAAE,CAAC;QACToB,MAAM,EAAE7B;MACV,CAAC,CACF,CAAC;IACJ;IAEAI,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMsC,eAAe,GAAIH,CAAC,IAAK;IAC7B,MAAM;MAAEZ,OAAO;MAAEC;IAAQ,CAAC,GAAGW,CAAC,CAACC,WAAW;IAE1C,IAAIrC,SAAS,EAAE;MACb,IAAIJ,IAAI,KAAK,QAAQ,EAAE;QACrB,MAAM;UAAEmC;QAAK,CAAC,GAAGrC,QAAQ,CAACA,QAAQ,CAACuB,MAAM,GAAG,CAAC,CAAC;QAC9C,MAAMuB,OAAO,GAAG,CAAC,GAAGT,IAAI,EAAE,CAACP,OAAO,EAAEC,OAAO,CAAC,CAAC;QAC7C9B,WAAW,CAAE2C,YAAY,IACvBA,YAAY,CAACG,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;UAC/B,IAAIA,KAAK,KAAKjD,QAAQ,CAACuB,MAAM,GAAG,CAAC,EAAE;YACjC,OAAO;cACL,GAAGyB,GAAG;cACNX,IAAI,EAAES;YACR,CAAC;UACH,CAAC,MAAM;YACL,OAAOE,GAAG;UACZ;QACF,CAAC,CACH,CAAC;MACH,CAAC,MAAM,IAAI9C,IAAI,KAAK,MAAM,EAAE;QAC1BD,WAAW,CAAE2C,YAAY,IACvBA,YAAY,CAACG,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;UAC/B,IAAIA,KAAK,KAAKjD,QAAQ,CAACuB,MAAM,GAAG,CAAC,EAAE;YACjC,OAAO;cACL,GAAGyB,GAAG;cACNjC,KAAK,EAAEe,OAAO;cACdlB,MAAM,EAAEmB;YACV,CAAC;UACH,CAAC,MAAM;YACL,OAAOiB,GAAG;UACZ;QACF,CAAC,CACH,CAAC;MACH,CAAC,MAAM,IAAI9C,IAAI,KAAK,MAAM,EAAE;QAC1BD,WAAW,CAAE2C,YAAY,IACvBA,YAAY,CAACG,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;UAC/B,IAAIA,KAAK,KAAKjD,QAAQ,CAACuB,MAAM,GAAG,CAAC,EAAE;YACjC,OAAO;cACL,GAAGyB,GAAG;cACNjC,KAAK,EAAEe,OAAO,GAAGkB,GAAG,CAAClB,OAAO;cAC5BlB,MAAM,EAAEmB,OAAO,GAAGiB,GAAG,CAACjB;YACxB,CAAC;UACH,CAAC,MAAM;YACL,OAAOiB,GAAG;UACZ;QACF,CAAC,CACH,CAAC;MACH;IACF;EACF,CAAC;EAED,MAAME,aAAa,GAAIR,CAAC,IAAK;IAC3BnC,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEH,IAAG,EAACH,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAE+C,SAAS,GAAC;IAClB,oBACE3D,OAAA;MAAM4D,SAAS,EAAC,yDAAyD;MAAAC,QAAA,eACvE7D,OAAA;QAAK8D,GAAG,EAAC,EAAE;QAACC,GAAG,EAAC,uBAAuB;QAACH,SAAS,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9D,CAAC;EAEV;EACE,oBACEnE,OAAA;IACEoE,WAAW,EAAEnB,eAAgB;IAC7BoB,WAAW,EAAEhB,eAAgB;IAC7BiB,SAAS,EAAEZ,aAAc;IACzBE,SAAS,EAAC,yDAAyD;IAAAC,QAAA,eAErE7D,OAAA;MAAQuE,GAAG,EAAEjE;IAAU;MAAA0D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErB,CAAC;AAEV,CAAC;AAAC9D,EAAA,CA3NIF,MAAM;AAAAqE,EAAA,GAANrE,MAAM;AA6NZ,eAAeA,MAAM;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}