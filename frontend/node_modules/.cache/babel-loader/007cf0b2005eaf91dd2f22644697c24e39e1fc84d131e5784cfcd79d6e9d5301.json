{"ast":null,"code":"var _jsxFileName = \"D:\\\\react projects\\\\white-board\\\\frontend\\\\src\\\\Components\\\\Canvas\\\\Canvas.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useLayoutEffect } from \"react\";\nimport rough from \"roughjs\";\nimport CanvasViewer from './CanvasViewer/CanvasViewer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roughGenerator = rough.generator();\nconst Canvas = _ref => {\n  _s();\n  let {\n    canvasRef,\n    ctxRef,\n    elements,\n    setElements,\n    tool,\n    color,\n    user,\n    socket\n  } = _ref;\n  const [img, setImg] = useState(null);\n  useEffect(() => {\n    socket.on(\"whiteBoardDataResponse\", data => {\n      setImg(data.imgURL);\n    });\n  }, []);\n  if (!(user !== null && user !== void 0 && user.presenter)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-dark border-3 h-100 w-100 overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: \"Real time white board shared by presenter\"\n        // className=\"w-100 h-100\"\n        ,\n        style: {\n          height: window.innerHeight * 2,\n          width: \"285%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  const [isDrawing, setIsDrawing] = useState(false);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.height = window.innerHeight * 2;\n    canvas.width = window.innerWidth * 2;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 2;\n    ctx.lineCap = \"round\";\n    ctxRef.current = ctx;\n  }, []);\n  useEffect(() => {\n    ctxRef.current.strokeStyle = color;\n  }, [color]);\n  useLayoutEffect(() => {\n    if (canvasRef) {\n      const roughCanvas = rough.canvas(canvasRef.current);\n      if (elements.length > 0) {\n        ctxRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n      elements.forEach(element => {\n        if (element.type === \"rect\") {\n          roughCanvas.draw(roughGenerator.rectangle(element.offsetX, element.offsetY, element.width, element.height, {\n            stroke: element.stroke,\n            strokeWidth: 5,\n            roughness: 0\n          }));\n        } else if (element.type === \"line\") {\n          roughCanvas.draw(roughGenerator.line(element.offsetX, element.offsetY, element.width, element.height, {\n            stroke: element.stroke,\n            strokeWidth: 5,\n            roughness: 0\n          }));\n        } else if (element.type === \"pencil\") {\n          roughCanvas.linearPath(element.path, {\n            stroke: element.stroke,\n            strokeWidth: 5,\n            roughness: 0\n          });\n        }\n      });\n      const canvasImage = canvasRef.current.toDataURL();\n      socket.emit(\"whiteboardData\", canvasImage);\n    }\n  }, [elements]);\n  const handleMouseDown = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    if (tool === \"pencil\") {\n      setElements(prevElements => [...prevElements, {\n        type: \"pencil\",\n        offsetX,\n        offsetY,\n        path: [[offsetX, offsetY]],\n        stroke: color\n      }]);\n    } else if (tool === \"line\") {\n      setElements(prevElements => [...prevElements, {\n        type: \"line\",\n        offsetX,\n        offsetY,\n        width: offsetX,\n        height: offsetY,\n        stroke: color\n      }]);\n    } else if (tool === \"rect\") {\n      setElements(prevElements => [...prevElements, {\n        type: \"rect\",\n        offsetX,\n        offsetY,\n        width: 0,\n        height: 0,\n        stroke: color\n      }]);\n    }\n    setIsDrawing(true);\n  };\n  const handleMouseMove = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    if (isDrawing) {\n      if (tool === \"pencil\") {\n        const {\n          path\n        } = elements[elements.length - 1];\n        const newPath = [...path, [offsetX, offsetY]];\n        setElements(prevElements => prevElements.map((ele, index) => {\n          if (index === elements.length - 1) {\n            return {\n              ...ele,\n              path: newPath\n            };\n          } else {\n            return ele;\n          }\n        }));\n      } else if (tool === \"line\") {\n        setElements(prevElements => prevElements.map((ele, index) => {\n          if (index === elements.length - 1) {\n            return {\n              ...ele,\n              width: offsetX,\n              height: offsetY\n            };\n          } else {\n            return ele;\n          }\n        }));\n      } else if (tool === \"rect\") {\n        setElements(prevElements => prevElements.map((ele, index) => {\n          if (index === elements.length - 1) {\n            return {\n              ...ele,\n              width: offsetX - ele.offsetX,\n              height: offsetY - ele.offsetY\n            };\n          } else {\n            return ele;\n          }\n        }));\n      }\n    }\n  };\n  const handleMouseUp = e => {\n    setIsDrawing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    className: \"border border-dark border-3 h-100 w-100 overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"iZ3LRmR4opsbgZmcp/UcEyKMNrg=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["useEffect","useState","useLayoutEffect","rough","CanvasViewer","jsxDEV","_jsxDEV","roughGenerator","generator","Canvas","_ref","_s","canvasRef","ctxRef","elements","setElements","tool","color","user","socket","img","setImg","on","data","imgURL","presenter","className","children","src","alt","style","height","window","innerHeight","width","fileName","_jsxFileName","lineNumber","columnNumber","isDrawing","setIsDrawing","canvas","current","innerWidth","ctx","getContext","strokeStyle","lineWidth","lineCap","roughCanvas","length","clearRect","forEach","element","type","draw","rectangle","offsetX","offsetY","stroke","strokeWidth","roughness","line","linearPath","path","canvasImage","toDataURL","emit","handleMouseDown","e","nativeEvent","prevElements","handleMouseMove","newPath","map","ele","index","handleMouseUp","onMouseDown","onMouseMove","onMouseUp","ref","_c","$RefreshReg$"],"sources":["D:/react projects/white-board/frontend/src/Components/Canvas/Canvas.jsx"],"sourcesContent":["import { useEffect, useState, useLayoutEffect } from \"react\";\r\nimport rough from \"roughjs\";\r\nimport CanvasViewer from './CanvasViewer/CanvasViewer';\r\n\r\nconst roughGenerator = rough.generator();\r\n\r\nconst Canvas = ({\r\n  canvasRef,\r\n  ctxRef,\r\n  elements,\r\n  setElements,\r\n  tool,\r\n  color,\r\n  user,\r\n  socket,\r\n}) => {\r\n  const [img, setImg] = useState(null);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"whiteBoardDataResponse\", (data) => {\r\n      setImg(data.imgURL);\r\n    });\r\n  }, []);\r\n\r\n  if (!user?.presenter) {\r\n    return (\r\n      <div className=\"border border-dark border-3 h-100 w-100 overflow-hidden\">\r\n        <img\r\n          src={img}\r\n          alt=\"Real time white board shared by presenter\"\r\n          // className=\"w-100 h-100\"\r\n          style={{\r\n            height: window.innerHeight * 2,\r\n            width: \"285%\",\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    canvas.height = window.innerHeight * 2;\r\n    canvas.width = window.innerWidth * 2;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.strokeStyle = color;\r\n    ctx.lineWidth = 2;\r\n    ctx.lineCap = \"round\";\r\n\r\n    ctxRef.current = ctx;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    ctxRef.current.strokeStyle = color;\r\n  }, [color]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (canvasRef) {\r\n      const roughCanvas = rough.canvas(canvasRef.current);\r\n\r\n      if (elements.length > 0) {\r\n        ctxRef.current.clearRect(\r\n          0,\r\n          0,\r\n          canvasRef.current.width,\r\n          canvasRef.current.height\r\n        );\r\n      }\r\n\r\n      elements.forEach((element) => {\r\n        if (element.type === \"rect\") {\r\n          roughCanvas.draw(\r\n            roughGenerator.rectangle(\r\n              element.offsetX,\r\n              element.offsetY,\r\n              element.width,\r\n              element.height,\r\n              {\r\n                stroke: element.stroke,\r\n                strokeWidth: 5,\r\n                roughness: 0,\r\n              }\r\n            )\r\n          );\r\n        } else if (element.type === \"line\") {\r\n          roughCanvas.draw(\r\n            roughGenerator.line(\r\n              element.offsetX,\r\n              element.offsetY,\r\n              element.width,\r\n              element.height,\r\n              {\r\n                stroke: element.stroke,\r\n                strokeWidth: 5,\r\n                roughness: 0,\r\n              }\r\n            )\r\n          );\r\n        } else if (element.type === \"pencil\") {\r\n          roughCanvas.linearPath(element.path, {\r\n            stroke: element.stroke,\r\n            strokeWidth: 5,\r\n            roughness: 0,\r\n          });\r\n        }\r\n      });\r\n\r\n      const canvasImage = canvasRef.current.toDataURL();\r\n      socket.emit(\"whiteboardData\", canvasImage);\r\n    }\r\n  }, [elements]);\r\n\r\n  const handleMouseDown = (e) => {\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n\r\n    if (tool === \"pencil\") {\r\n      setElements((prevElements) => [\r\n        ...prevElements,\r\n        {\r\n          type: \"pencil\",\r\n          offsetX,\r\n          offsetY,\r\n          path: [[offsetX, offsetY]],\r\n          stroke: color,\r\n        },\r\n      ]);\r\n    } else if (tool === \"line\") {\r\n      setElements((prevElements) => [\r\n        ...prevElements,\r\n        {\r\n          type: \"line\",\r\n          offsetX,\r\n          offsetY,\r\n          width: offsetX,\r\n          height: offsetY,\r\n          stroke: color,\r\n        },\r\n      ]);\r\n    } else if (tool === \"rect\") {\r\n      setElements((prevElements) => [\r\n        ...prevElements,\r\n        {\r\n          type: \"rect\",\r\n          offsetX,\r\n          offsetY,\r\n          width: 0,\r\n          height: 0,\r\n          stroke: color,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n\r\n    if (isDrawing) {\r\n      if (tool === \"pencil\") {\r\n        const { path } = elements[elements.length - 1];\r\n        const newPath = [...path, [offsetX, offsetY]];\r\n        setElements((prevElements) =>\r\n          prevElements.map((ele, index) => {\r\n            if (index === elements.length - 1) {\r\n              return {\r\n                ...ele,\r\n                path: newPath,\r\n              };\r\n            } else {\r\n              return ele;\r\n            }\r\n          })\r\n        );\r\n      } else if (tool === \"line\") {\r\n        setElements((prevElements) =>\r\n          prevElements.map((ele, index) => {\r\n            if (index === elements.length - 1) {\r\n              return {\r\n                ...ele,\r\n                width: offsetX,\r\n                height: offsetY,\r\n              };\r\n            } else {\r\n              return ele;\r\n            }\r\n          })\r\n        );\r\n      } else if (tool === \"rect\") {\r\n        setElements((prevElements) =>\r\n          prevElements.map((ele, index) => {\r\n            if (index === elements.length - 1) {\r\n              return {\r\n                ...ele,\r\n                width: offsetX - ele.offsetX,\r\n                height: offsetY - ele.offsetY,\r\n              };\r\n            } else {\r\n              return ele;\r\n            }\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = (e) => {\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onMouseDown={handleMouseDown}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseUp={handleMouseUp}\r\n      className=\"border border-dark border-3 h-100 w-100 overflow-hidden\"\r\n    >\r\n      <canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}